room booking table:
        Schema::create('room_bookings', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('user_id');
            $table->unsignedBigInteger('room_id');
            $table->timestamp('start_time');
            $table->timestamp('end_time');
            $table->enum('status', ['pending', 'approved', 'rejected', 'canceled'])->default('pending');
            $table->string('izin_peminjaman_path'); // Path untuk menyimpan surat izin peminjaman (file PDF)
            $table->string('izin_kegiatan_path'); // Path untuk menyimpan surat izin kegiatan (file PDF)
            $table->text('keterangan')->nullable(); // Keterangan tambahan tentang peminjaman (opsional)
            $table->timestamps();

            // Foreign key constraints
            $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade');
            $table->foreign('room_id')->references('id')->on('ruang')->onDelete('cascade');
        });


booking room table:
        Schema::create('booking_rooms', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('booking_id');
            $table->unsignedBigInteger('room_id');
            $table->timestamps();

            // Foreign key constraints
            $table->foreign('booking_id')->references('id')->on('room_bookings')->onDelete('cascade');
            $table->foreign('room_id')->references('id')->on('ruang')->onDelete('cascade');
        });

booking room cancellation:
    {
        Schema::create('booking_cancellations', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('booking_id');
            $table->unsignedBigInteger('user_id');
            $table->text('reason');
            $table->timestamps();

            // Foreign key constraints
            $table->foreign('booking_id')->references('id')->on('room_bookings')->onDelete('cascade');
            $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade');
        });
    }

dengan skema tabel di atas, saya mau membuat aplikasi dimana user bisa booking banyak ruangan dalam satu transaksi menggunakan pivot table.

lalu setelah booking statusnya pending dan hanya admin yang dapat aprove baru jadwalnya muncul di fullcalendar.

untuk migration sudah beres semuanya, yang belum itu controler room booking, controler booking room, controler booking cancellation, workflow, dan UI user booking banyak ruangan.

saya memisahkan controler di sisi admin dan di sisi user.

bantu saya membuat controler, workflow, dan UI user booking banyak ruangan.